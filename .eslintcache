[{"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/index.js":"1","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/App.js":"2","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/reportWebVitals.js":"3","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/MainComponent.js":"4","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/MenuComponent.js":"5","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/HeaderComponent.js":"6","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/DishDetailComponent.js":"7","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/FooterComponent.js":"8","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/dishes.js":"9","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/HomeComponent.js":"10","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/ContactComponent.js":"11","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/comments.js":"12","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/leaders.js":"13","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/promotions.js":"14","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/AboutComponent.js":"15","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/configureStore.js":"16","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/CommentForm.js":"17","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/dishes.js":"18","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/promotions.js":"19","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/comments.js":"20","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/leaders.js":"21","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/ActionTypes.js":"22","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/ActionCreator.js":"23","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/LoadingComponent.js":"24","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/forms.js":"25"},{"size":643,"mtime":1610894479808,"results":"26","hashOfConfig":"27"},{"size":538,"mtime":1610968475904,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610894479808,"results":"29","hashOfConfig":"27"},{"size":2646,"mtime":1611633731217,"results":"30","hashOfConfig":"27"},{"size":1932,"mtime":1611632667981,"results":"31","hashOfConfig":"27"},{"size":5527,"mtime":1610963793820,"results":"32","hashOfConfig":"27"},{"size":2651,"mtime":1611631564537,"results":"33","hashOfConfig":"27"},{"size":2782,"mtime":1610896855610,"results":"34","hashOfConfig":"27"},{"size":1448,"mtime":1610898694370,"results":"35","hashOfConfig":"27"},{"size":1477,"mtime":1611631564537,"results":"36","hashOfConfig":"27"},{"size":9701,"mtime":1611634214291,"results":"37","hashOfConfig":"27"},{"size":4117,"mtime":1610898762125,"results":"38","hashOfConfig":"27"},{"size":2345,"mtime":1610898908532,"results":"39","hashOfConfig":"27"},{"size":435,"mtime":1610898762125,"results":"40","hashOfConfig":"27"},{"size":4247,"mtime":1610934820038,"results":"41","hashOfConfig":"27"},{"size":770,"mtime":1611634214291,"results":"42","hashOfConfig":"27"},{"size":3820,"mtime":1611624775108,"results":"43","hashOfConfig":"27"},{"size":615,"mtime":1611631564537,"results":"44","hashOfConfig":"27"},{"size":190,"mtime":1611623377805,"results":"45","hashOfConfig":"27"},{"size":442,"mtime":1611624775108,"results":"46","hashOfConfig":"27"},{"size":178,"mtime":1611623360183,"results":"47","hashOfConfig":"27"},{"size":176,"mtime":1611631564537,"results":"48","hashOfConfig":"27"},{"size":761,"mtime":1611632158563,"results":"49","hashOfConfig":"27"},{"size":245,"mtime":1611631564537,"results":"50","hashOfConfig":"27"},{"size":162,"mtime":1611634009558,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1aumsfk",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/index.js",[],["106","107"],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/App.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/reportWebVitals.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/MainComponent.js",["108"],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/MenuComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/HeaderComponent.js",["109"],"import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Col,\nButton, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input} from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n         + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                                alt=\"Ristorante Con Fusion\" />\n\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\">\n\n                                        </span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" className=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/DishDetailComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/FooterComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/dishes.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/HomeComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/ContactComponent.js",["110","111","112","113","114","115","116","117"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" className=\"form-control\"\n                                    placeholder=\"First Name\" validators ={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                <Errors\n                                    className=\"text-danger\" model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\" validators ={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                <Errors\n                                    className=\"text-danger\" model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\" validators ={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                    }} />\n                                <Errors\n                                    className=\"text-danger\" model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 numbers',\n                                        maxLength: 'Must be 15 numbers or less',\n                                        isNumber: 'Must be a number'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Emal</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\" \n                                    validators ={{\n                                        required, validEmail\n                                    }}/>\n                                <Errors\n                                    className=\"text-danger\" model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        validEmail: 'Invalid email address'\n                                    }}\n                                />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" className=\"form-control\" name=\"contactType\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/comments.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/leaders.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/shared/promotions.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/AboutComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/configureStore.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/CommentForm.js",["118","119","120"],"import React, { Component } from \"react\";\nimport { Control, Errors, LocalForm } from \"react-redux-form\";\nimport { Button, Label, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmitComment = this.handleSubmitComment.bind(this);\n    } \n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmitComment(values) {\n        this.toggleModal();\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-edit fa-lg\">\n\n                    </span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody className=\"mx-3\">\n                        <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" className=\"form-control\" name=\"rating\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" className=\"form-control\" id=\"author\" name=\"author\"\n                                    placeholder=\"Your Name\" validators ={{\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                    }} />\n                                <Errors\n                                    className=\"text-danger\" model=\".author\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\">Comment</Label>\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" className=\"form-control\" />\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                                    Submit\n                                </Button>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default CommentForm;","/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/dishes.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/promotions.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/comments.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/leaders.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/ActionTypes.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/ActionCreator.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/components/LoadingComponent.js",[],"/home/sakib/Documents/VS Code Workspaces/Web/FrontendDevWithReact/confusion/src/redux/forms.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":31,"column":3,"nodeType":"127","messageId":"128","endLine":34,"endColumn":4},{"ruleId":"129","severity":1,"message":"130","line":2,"column":81,"nodeType":"131","messageId":"132","endLine":2,"endColumn":84},{"ruleId":"133","severity":1,"message":"134","line":59,"column":29,"nodeType":"135","endLine":59,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":73,"column":37,"nodeType":"135","endLine":76,"endColumn":42},{"ruleId":"136","severity":1,"message":"137","line":91,"column":37,"nodeType":"135","endLine":94,"endColumn":42},{"ruleId":"136","severity":1,"message":"137","line":109,"column":37,"nodeType":"135","endLine":112,"endColumn":42},{"ruleId":"136","severity":1,"message":"137","line":128,"column":37,"nodeType":"135","endLine":132,"endColumn":41},{"ruleId":"136","severity":1,"message":"138","line":147,"column":45,"nodeType":"135","endLine":147,"endColumn":122},{"ruleId":"136","severity":1,"message":"139","line":153,"column":37,"nodeType":"135","endLine":153,"endColumn":119},{"ruleId":"136","severity":1,"message":"140","line":162,"column":37,"nodeType":"135","endLine":162,"endColumn":127},{"ruleId":"136","severity":1,"message":"139","line":47,"column":33,"nodeType":"135","endLine":47,"endColumn":104},{"ruleId":"136","severity":1,"message":"137","line":57,"column":33,"nodeType":"135","endLine":60,"endColumn":42},{"ruleId":"136","severity":1,"message":"140","line":73,"column":33,"nodeType":"135","endLine":73,"endColumn":123},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]